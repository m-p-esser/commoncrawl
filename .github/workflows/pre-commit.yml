# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pre-commit

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

permissions:
  contents: read
      
jobs:
    ci:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Install Python
          uses: actions/setup-python@v4
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python
        - name: Install poetry
          uses: abatilo/actions-poetry@v2
        - name: Setup a local virtual environment (if no poetry.toml file)
          run: |
            poetry config virtualenvs.create true --local
            poetry config virtualenvs.in-project true --local
        - uses: actions/cache@v3
          name: Define a cache for the virtual environment based on the dependencies lock file
          with:
            path: ./.venv
            key: venv-${{ hashFiles('poetry.lock') }}
        - name: Install the project dependencies
          run: poetry install
        - uses: pre-commit/action@v3.0.0
          with:
            extra_args: flake8 --all-files
        # - name: Run the automated tests (for example)
        #   run: poetry run pytest -v