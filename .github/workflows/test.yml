# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: test

on:
  push:
    branches:
      - develop
      - test
  pull_request:
    branches:
      - develop
      - test

permissions:
  contents: read

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"] # Can check other versions as well
        poetry-version: ["1.5.1"] # Can check other versions as well
        os: [ubuntu-latest] # Add [window-latest, macos-latest] later
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      # - name: Debug Poetry
      #   run: | 
      #     poetry debug info
      #     poetry check -vv
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run pytest -v